@model ProspectScouting.Models.AssignmentModels.AssignmentEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Assignments</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Assignment Attributes</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AssignmentID)

        <div class="form-group">
            @Html.LabelFor(model => model.AssignmentRequest, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AssignmentRequest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AssignmentRequest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.School.SchoolName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SchoolID", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SchoolID, "", new { @class = "text-danger" })
            </div>
            <div class=" col-md-offset-2">
                <input type="button" value="Add New School" onclick="location.href='@Url.Action("Create", "School")'" class="btn btn-default" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Scout.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ScoutID", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ScoutID, "", new { @class = "text-danger" })
            </div>
            <div class=" col-md-offset-2">
                <input type="button" value="Add New Scout" onclick="location.href='@Url.Action("Create", "Scout")'" class="btn btn-default" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Completed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Completed)
                    @Html.ValidationMessageFor(model => model.Completed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Assignment List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
